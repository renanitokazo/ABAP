Z_DEPENDENCY_INJECTION
Overview
Z_DEPENDENCY_INJECTION is an ABAP project demonstrating the use of Dependency Injection, Interfaces, Classes, Unit Testing, and the MVC (Model-View-Controller) pattern. The project includes the following components:

Model: Manages data retrieval.
Controller: Processes user input and interacts with the model.
View: Presents data to the user.
Unit Testing: Verifies the functionality of the controller with a mock model.
Objectives
Interfaces and Classes: Showcase the use of interfaces and classes in ABAP.
Dependency Injection: Illustrate how dependency injection can be used to decouple components.
MVC Pattern: Implement the MVC pattern to structure the code.
Unit Testing: Demonstrate unit testing with a fake model.
Components
1. Model
lcl_model and lcl_model_fake implement the zif_model interface.

lcl_model: Retrieves actual data from table T100.
lcl_model_fake: Provides mock data for testing purposes.
2. Controller
lcl_controller interacts with the model to fetch data and provide it to the view.

It uses dependency injection to receive a model instance (lcl_model or lcl_model_fake).
3. View
lcl_view initializes the controller and displays data using the start_of_selection method.

4. Unit Testing
ltc_test contains tests for the controller using a fake model.

The test_select_t100 method checks if the controller's select_t100 method returns non-initial data.
Setup
To set up and run this ABAP project, follow these steps:

Create the ABAP Report:

Copy the provided code into a new ABAP report named Z_DEPENDENCY_INJECTION.
Execute the Report:

Run the report to see the MVC pattern in action. It will display messages from the T100 table or the fake model.
Unit Testing:

Execute the unit tests to verify that the controller interacts correctly with the fake model.
Usage
Run the Report:

Go to transaction SE38/SE80, enter Z_DEPENDENCY_INJECTION, and execute it.
The view will display messages based on the model used.
Testing:

Use transaction SE24 to execute the unit tests, or navigate to the ABAP Unit Test tool.

Dependencies
ABAP development environment in SAP.

Notes
Fake Model: The fake model is used for testing and provides predefined data.
Model Selection: The view uses the real model by default, but it can be changed to the fake model in the controller for testing.

Author
Renan Itokazo


+---------------------+
| <<interface>>       |
| zif_model           |
+---------------------+
| + select_t100()     |
+---------------------+
          ^
          |
+---------------------+          +----------------------+
| lcl_model           |          | lcl_model_fake        |
+---------------------+          +----------------------+
| - constructor()     |          | - constructor()      |
| + select_t100()     |          | + select_t100()      |
+---------------------+          +----------------------+
          ^
          |
          |
+---------------------+
| lcl_controller      |
+---------------------+
| - o_model : REF TO |
|   zif_model         |
+---------------------+
| + constructor()     |
| + select_t100()     |
+---------------------+
          ^
          |
+---------------------+
| lcl_view            |
+---------------------+
| - o_controller :    |
|   REF TO lcl_controller |
+---------------------+
| + constructor()     |
| + start_of_selection()|
+---------------------+

+---------------------+
| ltc_test            |
+---------------------+
| - o_fake_model : REF|
|   TO lcl_model_fake |
| - o_controller : REF|
|   TO lcl_controller |
+---------------------+
| + setup()           |
| + test_select_t100()|
+---------------------+

